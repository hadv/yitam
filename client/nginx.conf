# Custom log formats for better attack detection
log_format security '$remote_addr - $remote_user [$time_local] '
                   'Real-IP: $http_x_real_ip Forwarded-For: $http_x_forwarded_for '
                   'Access-Code: $http_x_access_code '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$request_time $upstream_response_time '
                   'Rate-Limited: $limit_req_status';

# Rate limiting configuration - using both real and proxy IP
limit_req_zone $binary_remote_addr$http_x_real_ip zone=one:10m rate=10r/s;
limit_req_zone $binary_remote_addr$http_x_real_ip zone=api:10m rate=5r/s;
limit_req_zone $binary_remote_addr$http_x_real_ip zone=login:10m rate=2r/s;

# Define upstream server for backend
upstream backend {
    server server:3000;
}

# Redirect www to non-www
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.yitam.org;
    
    # SSL configuration for www domain
    ssl_certificate /etc/nginx/ssl/yitam.org.crt;
    ssl_certificate_key /etc/nginx/ssl/yitam.org.key;
    
    # Redirect all www traffic to non-www
    return 301 $scheme://yitam.org$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    server_name localhost yitam.org;
    
    # Enhanced logging
    access_log /var/log/nginx/access.log security;
    error_log /var/log/nginx/error.log warn;
    
    # IP blacklist configuration
    include /etc/nginx/conf.d/blacklist.conf;
    
    # For Docker/local development, serve directly from HTTP
    root /usr/share/nginx/html;
    index index.html;
    
    # If SSL is configured, uncomment to redirect to HTTPS
    # For Docker testing, we'll keep serving via HTTP
    # location / {
    #     return 301 https://$host$request_uri;
    # }
    
    location / {
        try_files $uri $uri/ /index.html;
        
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for main site
        limit_req zone=one burst=20 nodelay;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # Proxy API requests to the backend server
    location /api {
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for API endpoints
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Access-Code $http_x_access_code;
    }

    # Rate limiting for login attempts
    location /api/auth/login {
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Access-Code $http_x_access_code;
    }

    # Proxy WebSocket connections
    location /socket.io {
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for WebSocket connections
        limit_req zone=one burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Access-Code $http_x_access_code;
    }
}

# HTTPS server configuration
# This can be enabled in production when certificates are properly mounted
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name yitam.org;

    # Enhanced logging
    access_log /var/log/nginx/ssl_access.log security;
    error_log /var/log/nginx/ssl_error.log warn;

    # IP blacklist configuration
    include /etc/nginx/conf.d/blacklist.conf;

    # SSL configuration - supporting both direct and Let's Encrypt paths
    ssl_certificate /etc/nginx/ssl/yitam.org.crt;
    ssl_certificate_key /etc/nginx/ssl/yitam.org.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Main location block
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for main site
        limit_req zone=one burst=20 nodelay;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # Proxy API requests to the backend server
    location /api {
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for API endpoints
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Access-Code $http_x_access_code;
    }

    # Proxy WebSocket connections
    location /socket.io {
        # Get real IP from proxy
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # Rate limiting for WebSocket connections
        limit_req zone=one burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Access-Code $http_x_access_code;
    }
} 